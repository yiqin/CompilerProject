#ifndef __CSTR_COMPILER__SCANNER_HPP
#define __CSTR_COMPILER__SCANNER_HPP

#ifndef YY_DECL
#define YY_DECL                               \
    parser::Parser::token_type                \
    scanner::Scanner::yylex (                 \
        parser::Parser::semantic_type* yylval \
    )
#endif

#undef yyFlexLexer
#define yyFlexLexer ScannerFlexLexer
#include <FlexLexer.h>

namespace scanner {
class Scanner;
}  // namespace scanner

#include "parser.tab.hpp"


// The FlexLexer class provided by Flex has no way of adding parameters to the
// yylex funtion. So we do that with a sub-class here.

namespace scanner {

class Scanner : public ScannerFlexLexer {
  public:
    Scanner (
        std::istream* arg_yyin = nullptr,
        std::ostream* arg_yyout = nullptr
    ) : ScannerFlexLexer(arg_yyin, arg_yyout) {}

    virtual ~Scanner () {}

    // This is the main function generated by Flex in the scanner.yy.cpp file.
    // Its signature is specified in the macro YY_DECL above.
    parser::Parser::token_type yylex (
        parser::Parser::semantic_type* yylval
    );
};

}  // namespace scanner


#endif  // __CSTR_COMPILER__SCANNER_HPP
